# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:

      - name: CPU checked
        run: sudo apt-get install cpu-checker

      - name: KVM check
        run: sudo /usr/sbin/kvm-ok

      - name: Install KVM
        run: sudo apt-get install qemu-kvm libvirt-bin ubuntu-vm-builder bridge-utils ia32-libs-multiarch

      - name: KVM check
        run: kvm-ok

#      - name: Start Selenoid server
#        uses: n-ton4/selenoid-github-action@master
#        id: start-selenoid
#        continue-on-error: false
#        with:
#          version: 1.10.1
#          args: -limit 2
#          browsers: android:9.0
#          last-versions: 1
#
#      - name: Check Selenoid has been started
#        run: curl http://localhost:4444/status
#
#      - name: Adding session from curl
#        run: |-
#          curl -X POST 'http://localhost:4444/wd/hub/session' -d '{ "desiredCapabilities":{ "browserName":"android", "browserVersion": "9.0", "platformName": "Android","selenoid:options": {"enableVNC": true,"name": "this.test.is.launched.by.curl","sessionTimeout": "120s"}}}'

#      - name: Checkout the code
#        uses: actions/checkout@v2
#
#      - name: Set up JDK 1.8
#        uses: actions/setup-java@v2
#        with:
#          distribution: 'adopt'
#          java-version: '11'
#
#      - name: Set up Maven
#        uses: stCarolas/setup-maven@v4
#        with:
#          maven-version: 3.8.1
#
#      - name : Run test scripts
#        run : mvn clean test

#      - name: Get allure history
#        uses: actions/checkout@v2
#        if: always()
#        continue-on-error: true
#        with:
#          ref: gh-pages
#          path: gh-pages

#      - name: Setup allure report
#        uses: simple-elf/allure-report-action@master
#        if: always()
#        id: allure-report
#        with:
#          allure_results: allure-results
#          allure_history: allure-history
#          keep_reports: 20
#
#      - name: Deploy report to Github Pages
#        if: always()
#        uses: peaceiris/actions-gh-pages@v2
#        env:
#          PERSONAL_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#          PUBLISH_BRANCH: gh-pages
#          PUBLISH_DIR: allure-history